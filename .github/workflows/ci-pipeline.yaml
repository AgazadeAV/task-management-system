name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: taskmanagerdb
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    env:
      # DATABASE
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/taskmanagerdb

      # JWT
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      JWT_EXPIRATION: ${{ secrets.JWT_EXPIRATION }}
      JWT_ISSUER: ${{ secrets.JWT_ISSUER }}

      # CRYPTO
      CRYPTO_CIPHER_ALGORITHM: ${{ secrets.CRYPTO_CIPHER_ALGORITHM }}
      CRYPTO_KEYS_AES: ${{ secrets.CRYPTO_KEYS_AES }}

      # HASHING
      HASH_ALGORITHM: ${{ secrets.HASH_ALGORITHM }}

      # ADMIN CREDENTIALS
      ADMIN_USERNAME: ${{ secrets.ADMIN_USERNAME }}
      ADMIN_FIRST_NAME: ${{ secrets.ADMIN_FIRST_NAME }}
      ADMIN_LAST_NAME: ${{ secrets.ADMIN_LAST_NAME }}
      ADMIN_EMAIL: ${{ secrets.ADMIN_EMAIL }}
      ADMIN_PASSWORD: ${{ secrets.ADMIN_PASSWORD }}
      ADMIN_BIRTH_DATE: ${{ secrets.ADMIN_BIRTH_DATE }}
      ADMIN_PHONE_NUMBER: ${{ secrets.ADMIN_PHONE_NUMBER }}

      SPRING_PROFILES_ACTIVE: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: maven-${{ runner.os }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            maven-${{ runner.os }}-

      - name: Build with Maven (without tests)
        run: mvn clean install -DskipTests

      - name: Run tests
        run: mvn test

      - name: Package JAR
        run: mvn package -DskipTests

      - name: Upload JAR artifact
        uses: actions/upload-artifact@v4
        with:
          name: task-manager-app
          path: target/*.jar
